{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Desktop\\\\ecom\\\\client\\\\src\\\\addresscontextapi\\\\addressstate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport AddressContext from './addresscontext';\nimport AddressReducer from './addressreducer';\nimport setAuthToken from '../utils/setAuthToken';\nimport axios from 'axios';\nimport { GET_ADDRESS, POST_ADDRESS } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddressState = props => {\n  _s();\n\n  const initialstate = {\n    address: [],\n    newaddress: '',\n    errors: ''\n  };\n  const [state, dispatch] = useReducer(AddressReducer, initialstate);\n\n  const addaddress = async formdata => {\n    // console.log(formdata)\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          \"Access-Control-Allow-Origin\": true\n        }\n      };\n      const res = await axios.post('http://localhost:5000/api/user/address', formdata, config);\n      console.log(res.data);\n      dispatch({\n        type: POST_ADDRESS,\n        payload: res.data\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AddressContext.Provider, {\n    value: {\n      addaddress,\n      addressstate: state\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AddressState, \"KgVMCb+nbzTZ2OM2rBr4zT2KgLE=\");\n\n_c = AddressState;\nexport default AddressState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddressState\");","map":{"version":3,"sources":["C:/Users/KIIT/Desktop/ecom/client/src/addresscontextapi/addressstate.js"],"names":["React","useReducer","AddressContext","AddressReducer","setAuthToken","axios","GET_ADDRESS","POST_ADDRESS","AddressState","props","initialstate","address","newaddress","errors","state","dispatch","addaddress","formdata","localStorage","token","config","headers","res","post","console","log","data","type","payload","error","message","addressstate","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,WADJ,EAEIC,YAFJ,QAGO,UAHP;;;AAKA,MAAMC,YAAY,GAAGC,KAAK,IAAE;AAAA;;AAGtB,QAAMC,YAAY,GAAE;AAElBC,IAAAA,OAAO,EAAC,EAFU;AAGlBC,IAAAA,UAAU,EAAC,EAHO;AAIlBC,IAAAA,MAAM,EAAC;AAJW,GAApB;AAOE,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBd,UAAU,CAACE,cAAD,EAAgBO,YAAhB,CAAnC;;AAIC,QAAMM,UAAU,GAAG,MAAMC,QAAN,IAAiB;AAClC;AACC,QAAGC,YAAY,CAACC,KAAhB,EACA;AACIf,MAAAA,YAAY,CAACc,YAAY,CAACC,KAAd,CAAZ;AACH;;AACC,QAAI;AACF,YAAMC,MAAM,GAAG;AACXC,QAAAA,OAAO,EAAC;AACJ,0BAAgB,kBADZ;AAEJ,yCAA+B;AAF3B;AADG,OAAf;AAQA,YAAMC,GAAG,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAW,wCAAX,EAAoDN,QAApD,EAA6DG,MAA7D,CAAlB;AACCI,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;AACDX,MAAAA,QAAQ,CAAC;AACLY,QAAAA,IAAI,EAACpB,YADA;AAELqB,QAAAA,OAAO,EAACN,GAAG,CAACI;AAFP,OAAD,CAAR;AAID,KAfD,CAeE,OAAOG,KAAP,EAAc;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAK,CAACC,OAAlB;AACH;AAKL,GA5BD;;AAkCF,sBACI,QAAC,cAAD,CAAgB,QAAhB;AACG,IAAA,KAAK,EACD;AACId,MAAAA,UADJ;AAEGe,MAAAA,YAAY,EAACjB;AAFhB,KAFP;AAAA,cAYCL,KAAK,CAACuB;AAZP;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBN,CAlED;;GAAMxB,Y;;KAAAA,Y;AAoEN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport AddressContext from './addresscontext';\r\nimport AddressReducer from './addressreducer';\r\nimport setAuthToken from '../utils/setAuthToken'\r\nimport axios from 'axios';\r\nimport {\r\n    GET_ADDRESS,\r\n    POST_ADDRESS\r\n} from '../types'\r\n\r\nconst AddressState = props=>{\r\n\r\n\r\n      const initialstate ={\r\n\r\n        address:[],\r\n        newaddress:'',\r\n        errors:''\r\n      }\r\n\r\n        const [state,dispatch] = useReducer(AddressReducer,initialstate);\r\n        \r\n\r\n\r\n         const addaddress = async(formdata)=>{\r\n           // console.log(formdata)\r\n            if(localStorage.token)\r\n            {\r\n                setAuthToken(localStorage.token);\r\n            }\r\n              try {\r\n                const config = {\r\n                    headers:{\r\n                        'Content-Type': 'application/json',\r\n                        \"Access-Control-Allow-Origin\": true,\r\n                        \r\n                    }    \r\n                };\r\n\r\n                const res = await axios.post('http://localhost:5000/api/user/address',formdata,config);\r\n                 console.log(res.data)\r\n                dispatch({\r\n                    type:POST_ADDRESS,\r\n                    payload:res.data\r\n                })\r\n              } catch (error) {\r\n                  console.log(error.message);\r\n              }\r\n\r\n\r\n\r\n\r\n         }\r\n\r\n\r\n\r\n\r\n\r\n       return (\r\n           <AddressContext.Provider\r\n              value={\r\n                  {\r\n                      addaddress,\r\n                     addressstate:state \r\n                  }\r\n              }\r\n           \r\n           \r\n           \r\n           >\r\n           \r\n           {props.children}\r\n           \r\n           </AddressContext.Provider>\r\n       )\r\n\r\n}\r\n\r\nexport default AddressState;"]},"metadata":{},"sourceType":"module"}