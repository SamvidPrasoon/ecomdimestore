{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Desktop\\\\ecom\\\\client\\\\src\\\\authcontextapi\\\\authstate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport AuthReducer from './authreducer';\nimport AuthContext from './authcontext';\nimport setAuthToken from '../utils/setAuthToken';\nimport axios from 'axios';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, CLEAR_ERRORS, USER_LOADED, ALL_USERS, AUTH_ERROR, LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialstate = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: false,\n    loading: true,\n    user: null,\n    users: [],\n    error: ''\n  }; // console.log(initialstate);\n\n  const [state, dispatch] = useReducer(AuthReducer, initialstate); //load user\n\n  const loaduser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get('http://localhost:5000/api/auth/');\n      console.log(res.data);\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }; // get all users \n\n\n  const allusers = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/user');\n      dispatch({\n        type: ALL_USERS,\n        payload: res.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // register user\n\n\n  const register = async formdata => {\n    //console.log(name,email,password);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        \"Access-Control-Allow-Origin\": true\n      }\n    };\n\n    try {\n      const res = await axios.post('http://localhost:5000/api/auth/signin', formdata, config);\n      console.log(res.data);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      //console.log(err.response);\n      const errors = err.response.data.errors;\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: errors\n      });\n      dispatch({\n        type: CLEAR_ERRORS\n      });\n    }\n  }; // login user\n\n\n  const login = async formdata => {\n    //console.log(name,email,password);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        \"Access-Control-Allow-Origin\": true\n      }\n    };\n\n    try {\n      const res = await axios.post('http://localhost:5000/api/auth/', formdata, config);\n      console.log(res.data);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      //console.log(err.response);\n      if (err) {\n        const errors = err.response.data.errors;\n        dispatch({\n          type: LOGIN_FAIL,\n          payload: errors\n        });\n      }\n\n      dispatch({\n        type: CLEAR_ERRORS\n      });\n    }\n  }; //logout user\n\n\n  const logout = async () => {\n    dispatch({\n      type: LOGOUT\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      register,\n      loaduser,\n      login,\n      logout,\n      allusers,\n      authstate: state\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AuthState, \"KgVMCb+nbzTZ2OM2rBr4zT2KgLE=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["C:/Users/KIIT/Desktop/ecom/client/src/authcontextapi/authstate.js"],"names":["React","useReducer","AuthReducer","AuthContext","setAuthToken","axios","REGISTER_SUCCESS","REGISTER_FAIL","CLEAR_ERRORS","USER_LOADED","ALL_USERS","AUTH_ERROR","LOGIN_FAIL","LOGIN_SUCCESS","LOGOUT","AuthState","props","initialstate","token","localStorage","getItem","isAuthenticated","loading","user","users","error","state","dispatch","loaduser","res","get","console","log","data","type","payload","allusers","register","formdata","config","headers","post","err","errors","response","login","logout","authstate","children"],"mappings":"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","sourcesContent":["import React,{useReducer} from 'react';\r\nimport AuthReducer from './authreducer';\r\nimport AuthContext from './authcontext';\r\nimport setAuthToken from '../utils/setAuthToken'\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    CLEAR_ERRORS,\r\n    USER_LOADED,\r\n    ALL_USERS,\r\n    AUTH_ERROR,\r\n    LOGIN_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGOUT,\r\n    \r\n}from '../types'\r\n\r\nconst AuthState = props=>\r\n{\r\n\r\n     const initialstate = {\r\n            token:localStorage.getItem('token'),\r\n            isAuthenticated:false,\r\n            loading:true,\r\n            user:null,\r\n            users:[],\r\n            error:''\r\n\r\n     }\r\n    // console.log(initialstate);\r\n   const [state,dispatch] = useReducer(AuthReducer,initialstate);\r\n\r\n    //load user\r\n     const loaduser = async()=>{\r\n          \r\n            if(localStorage.token)\r\n            {\r\n                setAuthToken(localStorage.token)\r\n            }\r\n         \r\n            try {\r\n                const res = await axios.get('http://localhost:5000/api/auth/');\r\n                console.log(res.data);\r\n                dispatch({\r\n                    type:USER_LOADED,\r\n                    payload:res.data\r\n                })\r\n               } catch (error) {\r\n                   dispatch({\r\n                       type:AUTH_ERROR\r\n                   })\r\n               }\r\n\r\n     }\r\n      // get all users \r\n      const allusers= async()=>{\r\n          try {\r\n              const res = await axios.get('http://localhost:5000/api/user')\r\n              dispatch({\r\n                type:ALL_USERS,\r\n                payload:res.data\r\n            })\r\n          } catch (error) {\r\n              console.log(error)\r\n          }\r\n      }  \r\n \r\n\r\n    // register user\r\n    const register = async(formdata)=>{\r\n        //console.log(name,email,password);\r\n        const config = {\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\": true,\r\n                \r\n            }    \r\n        };\r\n        \r\n        try {\r\n            const res = await axios.post('http://localhost:5000/api/auth/signin',formdata,config);\r\n            console.log(res.data);\r\n            dispatch({\r\n                type:REGISTER_SUCCESS,\r\n                payload:res.data\r\n            })\r\n            \r\n         } catch (err) {\r\n             //console.log(err.response);\r\n           const errors = err.response.data.errors;\r\n           dispatch({\r\n            type:REGISTER_FAIL,\r\n             payload:errors\r\n         })\r\n             dispatch({\r\n                 type:CLEAR_ERRORS\r\n             })\r\n                           \r\n        }\r\n    }\r\n    // login user\r\n    const login = async(formdata)=>{\r\n        //console.log(name,email,password);\r\n        const config = {\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\": true,\r\n                \r\n            }    \r\n        };\r\n        \r\n        try {\r\n            const res = await axios.post('http://localhost:5000/api/auth/',formdata,config);\r\n            console.log(res.data);\r\n            dispatch({\r\n                type:LOGIN_SUCCESS,\r\n                payload:res.data\r\n            })\r\n            \r\n         } catch (err) {\r\n             //console.log(err.response);\r\n             if(err)\r\n             {\r\n                const errors = err.response.data.errors;\r\n                dispatch({\r\n                    type:LOGIN_FAIL,\r\n                     payload:errors\r\n                 })\r\n                   \r\n            }\r\n            dispatch({\r\n                type:CLEAR_ERRORS\r\n            }) \r\n     \r\n                           \r\n        }\r\n    }\r\n    \r\n    //logout user\r\n\r\n    const logout = async()=>{\r\n        dispatch({\r\n            type:LOGOUT\r\n        })\r\n    }\r\n\r\n\r\n\r\n  return (\r\n      <AuthContext.Provider\r\n        value={\r\n            {\r\n                register,\r\n                loaduser,\r\n                login,\r\n                logout,\r\n                allusers,\r\n                authstate:state\r\n            }\r\n        }\r\n      \r\n      >\r\n      \r\n      \r\n      {props.children}\r\n      </AuthContext.Provider>\r\n\r\n\r\n  )\r\n\r\n\r\n\r\n\r\n}\r\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}